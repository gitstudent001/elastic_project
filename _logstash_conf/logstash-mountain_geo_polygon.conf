input {
  file {
    path => "작업하는폴더위치경로입력/*.geojsonl"  # GeoJSONL 파일 경로
    start_position => "beginning"  # 파일의 시작부터 읽기
    sincedb_path => "nul"  # sincedb 파일 비활성화 (파일을 다시 읽을 수 있도록 설정)
    codec => "json"  # JSONL 포맷을 처리하기 위한 codec
  }
}

filter {

    # 파일명에서 숫자 추출
  grok {
    match => { "path" => ".*/fin_(?<number>\d+)\.geojsonl" }
  }

  mutate {
    add_field => { "[@metadata][index_name]" => "mountain_fin_%{number}" }
    add_field => {"Shape_Area" => "%{[properties][Shape_Area]}"}
    add_field => {"Shape_Leng" => "%{[properties][Shape_Leng]}"}
    add_field => {"FIFTH_FRTP" => "%{[properties][FIFTH_FRTP]}"}
  }

  mutate {
    remove_field => ["@version", "path", "host", "type", "@timestamp", "properties"]
  }

}

output {
  # Elasticsearch에 전송
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "%{[@metadata][index_name]}"  # 데이터가 저장될 인덱스 이름
  }

  # 디버깅을 위한 stdout 출력
  stdout { codec => rubydebug }
}
